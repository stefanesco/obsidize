class Obsidize < Formula
  desc "Claude to Obsidian converter"
  homepage "https://github.com/{{REPO}}"
  license "AGPL-3.0"
  version "{{VERSION}}"

  on_macos do
    on_arm do
      url "{{ARM64_URL}}"
      sha256 "{{ARM64_SHA}}"
    end
    on_intel do
      url "{{AMD64_URL}}"
      sha256 "{{AMD64_SHA}}"
    end
  end

  {{#LINUX_ENABLED}}
  on_linux do
    on_intel do
      url "{{LINUX_URL}}"
      sha256 "{{LINUX_SHA}}"
    end
  end
  {{/LINUX_ENABLED}}

  def install
    # Install all contents to libexec
    libexec.install Dir["*"]

    # Create wrapper scripts in bin/
    # On macOS: prefer native-image, fallback to jlink
    # On Linux: use jlink binary
    if OS.mac?
      if (libexec/"bin/obsidize-native").exist?
        # Use native binary on macOS for best performance
        bin.write "obsidize", <<~EOS
          #!/bin/bash
          exec "#{libexec}/bin/obsidize-native" "$@"
        EOS
      elsif (libexec/"bin/obsidize").exist?
        # Fallback to jlink binary
        bin.install_symlink libexec/"bin/obsidize"
      else
        odie "No executable found in macOS package"
      end
    else
      # Linux: use jlink binary (more reliable than native)
      if (libexec/"bin/obsidize").exist?
        bin.install_symlink libexec/"bin/obsidize"
      else
        odie "No jlink executable found in Linux package"
      end
    end
  end

  test do
    assert_match "obsidize", shell_output("#{bin}/obsidize --help")
  end
end