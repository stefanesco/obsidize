name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build Release Binaries
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          bb: 'latest'

      - name: Build native executable
        run: bb package

      - name: Prepare Release Artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mv obsidize obsidize-${{ runner.os }}
          tar -czvf obsidize-${{ runner.os }}.tar.gz obsidize-${{ runner.os }}

      - name: Prepare Release Artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          mv obsidize.exe obsidize-windows.exe
          7z a obsidize-windows.zip obsidize-windows.exe

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            obsidize-*.tar.gz
            obsidize-*.zip