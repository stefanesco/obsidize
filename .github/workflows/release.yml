name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux (amd64)
            arch: amd64
          - os: macos-13
            name: macOS (amd64)
            arch: amd64
          - os: macos-14
            name: macOS (arm64)
            arch: arm64
          - os: windows-latest
            name: Windows (amd64)
            arch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
          key: ${{ runner.os }}-clojure-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-

      - name: Get weekly cache key
        id: weekly-key
        run: echo "key=$(date -u +'%Y-W%V')" >> "$GITHUB_OUTPUT"

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-${{ steps.weekly-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          bb: 'latest'
          clj-kondo: 'latest'

      - name: Install Clojure CLI
        if: runner.os == 'Linux'
        run: |
          curl -O https://download.clojure.org/install/linux-install-1.12.1.1550.sh
          chmod +x linux-install-1.12.1.1550.sh
          sudo ./linux-install-1.12.1.1550.sh

      - name: Install Trivy
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy

      - name: Build native executable
        run: bb package

      - name: Prepare Release Artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mv obsidize obsidize-${{ matrix.arch }}-${{ runner.os }}
          tar -czvf obsidize-${{ matrix.arch }}-${{ runner.os }}.tar.gz obsidize-${{ matrix.arch }}-${{ runner.os }}
          shasum -a 256 obsidize-${{ matrix.arch }}-${{ runner.os }}.tar.gz | awk '{print $1}' > SHA256-${{ matrix.arch }}-${{ runner.os }}

      - name: Prepare Release Artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          mv obsidize.exe obsidize-${{ matrix.arch }}-${{ runner.os }}.exe
          7z a obsidize-${{ matrix.arch }}-${{ runner.os }}.zip obsidize-${{ matrix.arch }}-${{ runner.os }}.exe

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets-${{ matrix.arch }}-${{ runner.os }}
          path: |
            obsidize-*.tar.gz
            obsidize-*.zip
            SHA256-*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          pattern: release-assets-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            obsidize-*.tar.gz
            obsidize-*.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Tap
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          pattern: release-assets-*
          merge-multiple: true

      - name: Set up environment for formula
        id: formula-env
        run: |
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "ARM64_SHA=$(cat SHA256-arm64-macos-14)" >> $GITHUB_ENV
          echo "AMD64_SHA=$(cat SHA256-amd64-macos-13)" >> $GITHUB_ENV

      - name: Clone Homebrew tap
        run: git clone https://github.com/${{ vars.HOMEBREW_TAP_REPO }} tap

      - name: Generate formula from template
        working-directory: tap
        run: |
          cat > template.rb <<-'RUBY'
          class Obsidize < Formula
            desc "A simple Clojure CLI tool"
            homepage "https://github.com/$REPO"
            version "$VERSION"

            on_macos do
              on_arm do
                url "https://github.com/$REPO/releases/download/$VERSION/obsidize-arm64-macos-14.tar.gz"
                sha256 "$ARM64_SHA"
              end
              on_intel do
                url "https://github.com/$REPO/releases/download/$VERSION/obsidize-amd64-macos-13.tar.gz"
                sha256 "$AMD64_SHA"
              end
            end

            def install
              bin.install "obsidize-arm64-macos-14" => "obsidize"
            end

            test do
              output = shell_output("#{bin}/obsidize --help 2>&1", 0)
              assert_match "obsidize", output
            end
          end
          RUBY
          envsubst < template.rb > Formula/obsidize.rb

      - name: Commit & push tap
        working-directory: tap
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: actions@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: actions@users.noreply.github.com
          TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        run: |
          git config --global user.name "${GIT_AUTHOR_NAME}"
          git config --global user.email "${GIT_AUTHOR_EMAIL}"
          git add Formula/obsidize.rb
          git commit -m "Update Obsidize formula to ${{ github.ref_name }}" || echo "No changes"
          git push https://x-access-token:${TAP_TOKEN}@github.com/${{ vars.HOMEBREW_TAP_REPO }} HEAD:main
